[
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(tidyverse)\nlibrary(readxl)\n\n# 2.0 Importing Files ----\nbikes_tbl      <- read_excel(path = \"Bikeshop Example/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"Bikeshop Example/01_bike_sales/01_raw_data/orderlines.xlsx\")\n\n#> New names:\n#> • `` -> `...1`\n\nbikeshops_tbl  <- read_excel(\"Bikeshop Example/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Examining Data ----\norderlines_tbl\n\n\n\n  \n\n\nglimpse(orderlines_tbl)\n\n#> Rows: 15,644\n#> Columns: 7\n#> $ ...1        <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n#> $ order.id    <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n#> $ order.line  <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n#> $ order.date  <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n#> $ customer.id <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n#> $ product.id  <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n#> $ quantity    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n\n# 4.0 Joining Data ----\n#left_join(orderlines_tbl, bikes_tbl)\nleft_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n\n\n  \n\n\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# 5.0 Wrangling Data ----\nbike_orderlines_joined_tbl %>% \n  select(category) %>%\n  filter(str_detect(category, \"^Mountain\")) %>% \n  unique()\n\n\n\n  \n\n\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  \n  # 5.1 Separate category name\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \", \") %>%\n  \n  # 5.2 Add the total price (price * quantity) \n  # Add a column to a tibble that uses a formula-style calculation of other columns\n  mutate(total.price = price * quantity) %>%\n  \n  # 5.3 Optional: Reorganize. Using select to grab or remove unnecessary columns\n  # 5.3.1 by exact column name\n  select(-...1, -gender) %>%\n  \n  # 5.3.2 by a pattern\n  # You can use the select_helpers to define patterns. \n  # Type ?ends_with and click on Select helpers in the documentation\n  select(-ends_with(\".id\")) %>%\n  \n  # 5.3.3 Actually we need the column \"order.id\". Let's bind it back to the data\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  \n  # 5.3.4 You can reorder the data by selecting the columns in your desired order.\n  # You can use select_helpers like contains() or everything()\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  \n  # 5.4 Rename columns because we actually wanted underscores instead of the dots\n  # (one at the time vs. multiple at once)\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# 6.0 Business Insights ----\n# 6.1 Sales by Year ----\nlibrary(lubridate)\n\n# Step 1 - Manipulate\nsales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns\n  select(state, total_price) %>%\n  \n  # Add year column\n  #mutate(year = year(order_date)) %>%\n  \n  # Grouping by year and summarizing sales\n  group_by(state) %>% \n  summarize(sales = sum(total_price)) %>%\n  \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_state_tbl\n\n\n\n  \n\n\n# Step 2 - Visualize\nsales_by_state_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = state, y = sales)) + \n  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline, \"lm\" = linear models\n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by State\",\n    #subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n\n#> `geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# 6.2 Sales by Year and Category 2 ----\n\n# Step 1 - Manipulate\nsales_by_loc_year_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns and add a year\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main category\n  group_by(year, state) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n\nsales_by_loc_year_tbl  \n\n\n\n  \n\n\n# Step 2 - Visualize\nsales_by_loc_year_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by location and year\",\n    #subtitle = \"Each product category has an upward trend\",\n    fill = \"States\" # Changes the legend name\n  )\n\n\n\n\n\n\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\n#install.packages(\"writexl\")\nlibrary(\"writexl\")\nbike_orderlines_wrangled_tbl %>%\n  write_xlsx(\"Bikeshop Example/02_bike_sales/bike_orderlines.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled_tbl %>% \n  write_csv(\"Bikeshop Example/02_bike_sales/bike_orderlines.csv\")\n\n# 7.3 RDS ----\nbike_orderlines_wrangled_tbl %>% \n  write_rds(\"Bikeshop Example/02_bike_sales/bike_orderlines.rds\")"
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "\n2.1 Header 2",
    "text": "2.1 Header 2\nHeader 3\nHeader 4\nHeader 5\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "1 Challange 1\n\n#List of needs of foodbanks countrywide\n# Libraries ----\nlibrary(httr)\nlibrary(jsonlite)\n\n# Call API ----\nneeds <- httr::GET(\"https://www.givefood.org.uk/api/2/needs/\")\n\nstr(needs)\n\n#> List of 10\n#>  $ url        : chr \"https://www.givefood.org.uk/api/2/needs/\"\n#>  $ status_code: int 200\n#>  $ headers    :List of 24\n#>   ..$ date                       : chr \"Wed, 24 May 2023 12:40:34 GMT\"\n#>   ..$ content-type               : chr \"application/json\"\n#>   ..$ transfer-encoding          : chr \"chunked\"\n#>   ..$ connection                 : chr \"keep-alive\"\n#>   ..$ vary                       : chr \"Accept-Encoding\"\n#>   ..$ vary                       : chr \"Cookie\"\n#>   ..$ access-control-allow-origin: chr \"*\"\n#>   ..$ expires                    : chr \"Wed, 24 May 2023 14:35:13 GMT\"\n#>   ..$ cache-control              : chr \"max-age=7200\"\n#>   ..$ content-security-policy    : chr \"font-src 'self' themes.googleusercontent.com *.gstatic.com maps.googleapis.com; script-src 'self' 'unsafe-inlin\"| __truncated__\n#>   ..$ strict-transport-security  : chr \"max-age=2592000; includeSubDomains\"\n#>   ..$ x-content-type-options     : chr \"nosniff\"\n#>   ..$ x-xss-protection           : chr \"1; mode=block\"\n#>   ..$ referrer-policy            : chr \"same-origin\"\n#>   ..$ x-cloud-trace-context      : chr \"132f7b96fcf0e21f3774e23cb5b2e05b\"\n#>   ..$ last-modified              : chr \"Wed, 24 May 2023 12:35:13 GMT\"\n#>   ..$ cf-cache-status            : chr \"HIT\"\n#>   ..$ age                        : chr \"321\"\n#>   ..$ report-to                  : chr \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qw%2FN2%2B%2FgZ0OCo%2F3LjSCN%2BFFoA\"| __truncated__\n#>   ..$ nel                        : chr \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"\n#>   ..$ server                     : chr \"cloudflare\"\n#>   ..$ cf-ray                     : chr \"7cc59ba058337267-HAM\"\n#>   ..$ content-encoding           : chr \"gzip\"\n#>   ..$ alt-svc                    : chr \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n#>   ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n#>  $ all_headers:List of 1\n#>   ..$ :List of 3\n#>   .. ..$ status : int 200\n#>   .. ..$ version: chr \"HTTP/1.1\"\n#>   .. ..$ headers:List of 24\n#>   .. .. ..$ date                       : chr \"Wed, 24 May 2023 12:40:34 GMT\"\n#>   .. .. ..$ content-type               : chr \"application/json\"\n#>   .. .. ..$ transfer-encoding          : chr \"chunked\"\n#>   .. .. ..$ connection                 : chr \"keep-alive\"\n#>   .. .. ..$ vary                       : chr \"Accept-Encoding\"\n#>   .. .. ..$ vary                       : chr \"Cookie\"\n#>   .. .. ..$ access-control-allow-origin: chr \"*\"\n#>   .. .. ..$ expires                    : chr \"Wed, 24 May 2023 14:35:13 GMT\"\n#>   .. .. ..$ cache-control              : chr \"max-age=7200\"\n#>   .. .. ..$ content-security-policy    : chr \"font-src 'self' themes.googleusercontent.com *.gstatic.com maps.googleapis.com; script-src 'self' 'unsafe-inlin\"| __truncated__\n#>   .. .. ..$ strict-transport-security  : chr \"max-age=2592000; includeSubDomains\"\n#>   .. .. ..$ x-content-type-options     : chr \"nosniff\"\n#>   .. .. ..$ x-xss-protection           : chr \"1; mode=block\"\n#>   .. .. ..$ referrer-policy            : chr \"same-origin\"\n#>   .. .. ..$ x-cloud-trace-context      : chr \"132f7b96fcf0e21f3774e23cb5b2e05b\"\n#>   .. .. ..$ last-modified              : chr \"Wed, 24 May 2023 12:35:13 GMT\"\n#>   .. .. ..$ cf-cache-status            : chr \"HIT\"\n#>   .. .. ..$ age                        : chr \"321\"\n#>   .. .. ..$ report-to                  : chr \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qw%2FN2%2B%2FgZ0OCo%2F3LjSCN%2BFFoA\"| __truncated__\n#>   .. .. ..$ nel                        : chr \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"\n#>   .. .. ..$ server                     : chr \"cloudflare\"\n#>   .. .. ..$ cf-ray                     : chr \"7cc59ba058337267-HAM\"\n#>   .. .. ..$ content-encoding           : chr \"gzip\"\n#>   .. .. ..$ alt-svc                    : chr \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n#>  $ cookies    :'data.frame': 0 obs. of  7 variables:\n#>   ..$ domain    : logi(0) \n#>   ..$ flag      : logi(0) \n#>   ..$ path      : logi(0) \n#>   ..$ secure    : logi(0) \n#>   ..$ expiration: 'POSIXct' num(0) \n#>   ..$ name      : logi(0) \n#>   ..$ value     : logi(0) \n#>  $ content    : raw [1:69033] 5b 0a 20 20 ...\n#>  $ date       : POSIXct[1:1], format: \"2023-05-24 12:40:34\"\n#>  $ times      : Named num [1:6] 0 0.00739 0.01947 0.05278 0.07257 ...\n#>   ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n#>  $ request    :List of 7\n#>   ..$ method    : chr \"GET\"\n#>   ..$ url       : chr \"https://www.givefood.org.uk/api/2/needs/\"\n#>   ..$ headers   : Named chr \"application/json, text/xml, application/xml, */*\"\n#>   .. ..- attr(*, \"names\")= chr \"Accept\"\n#>   ..$ fields    : NULL\n#>   ..$ options   :List of 2\n#>   .. ..$ useragent: chr \"libcurl/7.84.0 r-curl/5.0.0 httr/1.4.5\"\n#>   .. ..$ httpget  : logi TRUE\n#>   ..$ auth_token: NULL\n#>   ..$ output    : list()\n#>   .. ..- attr(*, \"class\")= chr [1:2] \"write_memory\" \"write_function\"\n#>   ..- attr(*, \"class\")= chr \"request\"\n#>  $ handle     :Class 'curl_handle' <externalptr> \n#>  - attr(*, \"class\")= chr \"response\"\n\nstr(needs$content)\n\n#>  raw [1:69033] 5b 0a 20 20 ...\n\n# Convert to text ----\nneedscontent <- httr::content(needs, as = \"text\")\n\n#> No encoding supplied: defaulting to UTF-8.\n\nstr(needscontent)\n\n#>  chr \"[\\n  {\\n    \\\"id\\\": \\\"f6653fe9\\\",\\n    \\\"found\\\": \\\"2023-05-24T11:52:51.632\\\",\\n    \\\"foodbank\\\": {\\n      \\\"na\"| __truncated__\n\n# Convert JSON string to a dataframe\nneedsJSON <- jsonlite::fromJSON(needscontent)\n\nneedsJSON"
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]