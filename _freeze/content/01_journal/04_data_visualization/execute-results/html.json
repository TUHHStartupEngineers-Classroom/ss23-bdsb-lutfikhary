{
  "hash": "ce3ebdfa57e3d1408e01caaa9cdbc0fb",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Lutfi Luqman Khary\"\n---\n\n\n# Challenge 1\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_497868fca39522b88db8b08af5522a7d'}\n\n```{.r .cell-code}\n# Libraries ----\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\n# Import data from CSV ----\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311581 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Data Wrangling ----\n\n# Select columns and filter categories\ncase_by_country_tbl <- covid_data_tbl %>%\n  \n  select(location, date, total_cases) %>%\n  filter(location %in% c(\"Germany\",\"United Kingdom\",\"France\",\"Spain\",\"United States\") & date < Sys.Date()-10) %>%\n  \n  # summarise\n  group_by(location, date) %>%\n  summarise(total_cases = sum(total_cases)) %>%\n  ungroup() %>%\n  \n  # remove NA\n  replace(is.na(.), 0) %>%\n  \n  # Set column name\n  rename('Continent / Country' = location,\n         'Cumulatives' = total_cases)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'location'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# synchronize data\nn = Sys.Date()-10\n\n\n# Show labels only at the end\nend_labels <- case_by_country_tbl %>% \n  group_by('Continent / Country') %>% \n  top_n(1, date)\n\n# 4.0 DATA VISUALIZATION ----\n\n# Line Plot\ncase_by_country_tbl %>%\n  \n  ggplot(aes(x=date, y=`Cumulatives`, group = `Continent / Country`, color = `Continent / Country`)) +\n  geom_line(size = 1) +\n  scale_x_date(date_breaks=\"1 month\", date_labels = \"%B'%y\", limits = as.Date(c('2020-01-01','2023-06-01')) ) +\n  scale_y_continuous(labels = scales::number_format(scale = 1e-6, \n                                                    prefix = \"\",\n                                                    suffix = \" M\")) +\n  scale_color_brewer(palette=\"Accent\") +\n  \n  labs(\n    title    = \"COVID-19 Confirmed Cases Worldwide\",\n    subtitle = str_glue(\"As of {n}\"),\n    x = \"\",\n    y = \"Cumulative Cases\"\n  ) + \n  \n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\"\n  ) +\n  \n  geom_label_repel(aes(label = scales::number(Cumulatives)), \n                   data = end_labels,\n                   nudge_x = 1,\n                   box.padding = 0.5,\n                   show.legend = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n# Challenge 2\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_5bd45d839379f9871062d261e872a4b0'}\n\n```{.r .cell-code}\n# Libraries ----\n\nlibrary(tidyverse)\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n\n```{.r .cell-code}\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n\n```{.r .cell-code}\n# Import world map ----\nworld <- map_data(\"world\")\n\n# Import COVID data ----\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311581 Columns: 67\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Data Wrangling ----\n# rename locations\ncovid_data_tbl <- covid_data_tbl %>% \n  mutate(location = case_when(\n    \n    location == \"Antigua and Barbuda\" ~ \"Antigua\",\n    location == \"Cote d'Ivoire\" ~ \"Ivory Coast\",\n    location == \"Czechia\" ~ \"Czech Republic\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    location == \"Timor\" ~ \"Timor-Leste\",\n    location == \"Trinidad and Tobago\" ~ \"Trinidad\",\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    TRUE ~ location\n    \n  ))\n\n# Select and Filter data\nmort_rate_tbl <- covid_data_tbl %>%\n  \n  select(location, date, total_deaths, population) %>%\n  \n  # Reemove NA\n  replace(is.na(.), 0) %>%\n  \n  # new column for mortality rate\n  group_by(location) %>%\n  mutate(mortality_rate = total_deaths / population) %>%\n  ungroup() %>%\n  \n  # select date\n  filter(date == \"2023-04-16\") %>%\n  \n  # Set column name\n  rename(region = location)\n\n  # Format as numeric value for mortality rate\n  mort_rate_tbl$mortality_rate <- as.numeric(mort_rate_tbl$mortality_rate)\n  \n  # Merge table\n  \n  mort_rate_map <- left_join(mort_rate_tbl,world, by = \"region\")\n  \n  # plot\n  \n  ggplot(mort_rate_map, aes(map_id = region, fill = mortality_rate))+\n    \n    geom_map(map = mort_rate_map,  color = \"black\")+\n    \n    expand_limits(x = mort_rate_map$long, y = mort_rate_map$lat) +\n    \n    scale_fill_gradient(low='red', high='grey10', labels = percent) +\n    \n    # Labels\n    labs(\n      title = \"Confirmed COVID-19 Deaths Relative to the size of the Population\",\n      caption = \"2023-04-16\",\n      x = \"\",\n      y = \"\",\n    ) +\n    \n    theme(\n      legend.position = \"right\"\n    )\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}